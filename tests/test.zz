using err::{ assert }

// core
using sodium::{
  sodium_init,
  sodium_set_misuse_handler,
  sodium_misuse
}

// aead_aegis128l
using sodium::{
  crypto_aead_aegis128l_KEYBYTES,
  crypto_aead_aegis128l_NSECBYTES,
  crypto_aead_aegis128l_NPUBBYTES,
  crypto_aead_aegis128l_ABYTES,
  crypto_aead_aegis128l_MESSAGEBYTES_MAX,

  crypto_aead_aegis128l_is_available,
  crypto_aead_aegis128l_keybytes,
  crypto_aead_aegis128l_nsecbytes,
  crypto_aead_aegis128l_npubbytes,
  crypto_aead_aegis128l_abytes,
  crypto_aead_aegis128l_messagebytes_max,
  crypto_aead_aegis128l_encrypt,
  crypto_aead_aegis128l_decrypt,
  crypto_aead_aegis128l_encrypt_detached,
  crypto_aead_aegis128l_decrypt_detached,
  crypto_aead_aegis128l_keygen,
}

// aead_aegis256
using sodium::{
	crypto_aead_aegis256_KEYBYTES,
	crypto_aead_aegis256_NSECBYTES,
	crypto_aead_aegis256_NPUBBYTES,
	crypto_aead_aegis256_ABYTES,
	crypto_aead_aegis256_MESSAGEBYTES_MAX,

	crypto_aead_aegis256_is_available,
	crypto_aead_aegis256_keybytes,
	crypto_aead_aegis256_nsecbytes,
	crypto_aead_aegis256_npubbytes,
	crypto_aead_aegis256_abytes,
	crypto_aead_aegis256_messagebytes_max,
	crypto_aead_aegis256_encrypt,
	crypto_aead_aegis256_decrypt,
	crypto_aead_aegis256_encrypt_detached,
	crypto_aead_aegis256_decrypt_detached,
	crypto_aead_aegis256_keygen,
}

// aead_aes256gcm
using sodium::{
  crypto_aead_aes256gcm_KEYBYTES,
  crypto_aead_aes256gcm_NSECBYTES,
  crypto_aead_aes256gcm_NPUBBYTES,
  crypto_aead_aes256gcm_ABYTES,
  crypto_aead_aes256gcm_MESSAGEBYTES_MAX,

  crypto_aead_aes256gcm_is_available,
  crypto_aead_aes256gcm_keybytes,
  crypto_aead_aes256gcm_nsecbytes,
  crypto_aead_aes256gcm_npubbytes,
  crypto_aead_aes256gcm_abytes,
  crypto_aead_aes256gcm_messagebytes_max,
  crypto_aead_aes256gcm_statebytes,
  crypto_aead_aes256gcm_encrypt,
  crypto_aead_aes256gcm_decrypt,
  crypto_aead_aes256gcm_encrypt_detached,
  crypto_aead_aes256gcm_decrypt_detached,
  crypto_aead_aes256gcm_beforenm,
  crypto_aead_aes256gcm_encrypt_afternm,
  crypto_aead_aes256gcm_decrypt_afternm,
  crypto_aead_aes256gcm_encrypt_detached_afternm,
  crypto_aead_aes256gcm_decrypt_detached_afternm,
  crypto_aead_aes256gcm_keygen,
  crypto_aead_aes256gcm_state,
}

// aead_chacha20poly1305
using sodium::{
  crypto_aead_chacha20poly1305_ietf_KEYBYTES,
  crypto_aead_chacha20poly1305_ietf_NSECBYTES,
  crypto_aead_chacha20poly1305_ietf_NPUBBYTES,
  crypto_aead_chacha20poly1305_ietf_ABYTES,
  crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX,
  crypto_aead_chacha20poly1305_KEYBYTES,
  crypto_aead_chacha20poly1305_NSECBYTES,
  crypto_aead_chacha20poly1305_NPUBBYTES,
  crypto_aead_chacha20poly1305_ABYTES,
  crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX,
  crypto_aead_chacha20poly1305_IETF_KEYBYTES,
  crypto_aead_chacha20poly1305_IETF_NSECBYTES,
  crypto_aead_chacha20poly1305_IETF_NPUBBYTES,
  crypto_aead_chacha20poly1305_IETF_ABYTES,
  crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX,

  crypto_aead_chacha20poly1305_ietf_keybytes,
  crypto_aead_chacha20poly1305_ietf_nsecbytes,
  crypto_aead_chacha20poly1305_ietf_npubbytes,
  crypto_aead_chacha20poly1305_ietf_abytes,
  crypto_aead_chacha20poly1305_ietf_messagebytes_max,
  crypto_aead_chacha20poly1305_ietf_encrypt,
  crypto_aead_chacha20poly1305_ietf_decrypt,
  crypto_aead_chacha20poly1305_ietf_encrypt_detached,
  crypto_aead_chacha20poly1305_ietf_decrypt_detached,
  crypto_aead_chacha20poly1305_ietf_keygen,
  crypto_aead_chacha20poly1305_keybytes,
  crypto_aead_chacha20poly1305_nsecbytes,
  crypto_aead_chacha20poly1305_npubbytes,
  crypto_aead_chacha20poly1305_abytes,
  crypto_aead_chacha20poly1305_messagebytes_max,
  crypto_aead_chacha20poly1305_encrypt,
  crypto_aead_chacha20poly1305_decrypt,
  crypto_aead_chacha20poly1305_encrypt_detached,
  crypto_aead_chacha20poly1305_decrypt_detached,
  crypto_aead_chacha20poly1305_keygen,
}

//aead_xchacha20poly1305
using sodium::{
  crypto_aead_xchacha20poly1305_ietf_KEYBYTES,
  crypto_aead_xchacha20poly1305_ietf_NSECBYTES,
  crypto_aead_xchacha20poly1305_ietf_NPUBBYTES,
  crypto_aead_xchacha20poly1305_ietf_ABYTES,
  crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX,
  crypto_aead_xchacha20poly1305_IETF_KEYBYTES,
  crypto_aead_xchacha20poly1305_IETF_NSECBYTES,
  crypto_aead_xchacha20poly1305_IETF_NPUBBYTES,
  crypto_aead_xchacha20poly1305_IETF_ABYTES,
  crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX,

  crypto_aead_xchacha20poly1305_ietf_keybytes,
  crypto_aead_xchacha20poly1305_ietf_nsecbytes,
  crypto_aead_xchacha20poly1305_ietf_npubbytes,
  crypto_aead_xchacha20poly1305_ietf_abytes,
  crypto_aead_xchacha20poly1305_ietf_messagebytes_max,
  crypto_aead_xchacha20poly1305_ietf_encrypt,
  crypto_aead_xchacha20poly1305_ietf_decrypt,
  crypto_aead_xchacha20poly1305_ietf_encrypt_detached,
  crypto_aead_xchacha20poly1305_ietf_decrypt_detached,
  crypto_aead_xchacha20poly1305_ietf_keygen,
}

//auth
using sodium::{
  crypto_auth_BYTES,
  crypto_auth_KEYBYTES,
  crypto_auth_PRIMITIVE,

  crypto_auth_bytes,
  crypto_auth_keybytes,
  crypto_auth_primitive,
  crypto_auth,
  crypto_auth_verify,
  crypto_auth_keygen,
}

// auth_hmacsha256
using sodium::{
  crypto_auth_hmacsha256_BYTES,
  crypto_auth_hmacsha256_KEYBYTES,

  crypto_auth_hmacsha256_bytes,
  crypto_auth_hmacsha256_keybytes,
  crypto_auth_hmacsha256,
  crypto_auth_hmacsha256_verify,
  crypto_auth_hmacsha256_statebytes,
  crypto_auth_hmacsha256_init,
  crypto_auth_hmacsha256_update,
  crypto_auth_hmacsha256_final,
  crypto_auth_hmacsha256_keygen,

  crypto_auth_hmacsha256_state,
}

fn main() -> int {
  assert(0 == sodium_init());
  return 0;
}
